{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nimport remark from 'remark';\nimport html from 'remark-html';\nconst infoDirectory = path.join(process.cwd(), 'info');\nexport async function getPrivacy() {\n  const fullPath = path.join(infoDirectory, 'privacy.md');\n  const fileContents = fs.readFileSync(fullPath, 'utf8');\n  const matterResult = matter(fileContents);\n  const processedContent = await remark().use(html).process(matterResult.content);\n  const contentHtml = processedContent.toString();\n  return _objectSpread({\n    contentHtml\n  }, matterResult.data);\n}\nexport async function getTos() {\n  const fullPath = path.join(infoDirectory, 'tos.md');\n  const fileContents = fs.readFileSync(fullPath, 'utf8');\n  const matterResult = matter(fileContents);\n  const processedContent = await remark().use(html).process(matterResult.content);\n  const contentHtml = processedContent.toString();\n  return _objectSpread({\n    contentHtml\n  }, matterResult.data);\n}\nexport async function getTransaction() {\n  const fullPath = path.join(infoDirectory, 'transaction.md');\n  const fileContents = fs.readFileSync(fullPath, 'utf8');\n  const matterResult = matter(fileContents);\n  const processedContent = await remark().use(html).process(matterResult.content);\n  const contentHtml = processedContent.toString();\n  return _objectSpread({\n    contentHtml\n  }, matterResult.data);\n}","map":{"version":3,"sources":["/Users/tkak/sample/next5/villageon/lib/info.js"],"names":["fs","path","matter","remark","html","infoDirectory","join","process","cwd","getPrivacy","fullPath","fileContents","readFileSync","matterResult","processedContent","use","content","contentHtml","toString","data","getTos","getTransaction"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,MAAMC,aAAa,GAAGJ,IAAI,CAACK,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,MAAzB,CAAtB;AAEA,OAAO,eAAeC,UAAf,GAA4B;AAC/B,QAAMC,QAAQ,GAAGT,IAAI,CAACK,IAAL,CAAUD,aAAV,EAAyB,YAAzB,CAAjB;AACA,QAAMM,YAAY,GAAGX,EAAE,CAACY,YAAH,CAAgBF,QAAhB,EAA0B,MAA1B,CAArB;AACA,QAAMG,YAAY,GAAGX,MAAM,CAACS,YAAD,CAA3B;AAEA,QAAMG,gBAAgB,GAAG,MAAMX,MAAM,GAChCY,GAD0B,CACtBX,IADsB,EAE1BG,OAF0B,CAElBM,YAAY,CAACG,OAFK,CAA/B;AAIA,QAAMC,WAAW,GAAGH,gBAAgB,CAACI,QAAjB,EAApB;AACA;AACID,IAAAA;AADJ,KAEOJ,YAAY,CAACM,IAFpB;AAIH;AAED,OAAO,eAAeC,MAAf,GAAwB;AAC3B,QAAMV,QAAQ,GAAGT,IAAI,CAACK,IAAL,CAAUD,aAAV,EAAyB,QAAzB,CAAjB;AACA,QAAMM,YAAY,GAAGX,EAAE,CAACY,YAAH,CAAgBF,QAAhB,EAA0B,MAA1B,CAArB;AACA,QAAMG,YAAY,GAAGX,MAAM,CAACS,YAAD,CAA3B;AAEA,QAAMG,gBAAgB,GAAG,MAAMX,MAAM,GAChCY,GAD0B,CACtBX,IADsB,EAE1BG,OAF0B,CAElBM,YAAY,CAACG,OAFK,CAA/B;AAIA,QAAMC,WAAW,GAAGH,gBAAgB,CAACI,QAAjB,EAApB;AACA;AACID,IAAAA;AADJ,KAEOJ,YAAY,CAACM,IAFpB;AAIH;AAED,OAAO,eAAeE,cAAf,GAAgC;AACnC,QAAMX,QAAQ,GAAGT,IAAI,CAACK,IAAL,CAAUD,aAAV,EAAyB,gBAAzB,CAAjB;AACA,QAAMM,YAAY,GAAGX,EAAE,CAACY,YAAH,CAAgBF,QAAhB,EAA0B,MAA1B,CAArB;AACA,QAAMG,YAAY,GAAGX,MAAM,CAACS,YAAD,CAA3B;AAEA,QAAMG,gBAAgB,GAAG,MAAMX,MAAM,GAChCY,GAD0B,CACtBX,IADsB,EAE1BG,OAF0B,CAElBM,YAAY,CAACG,OAFK,CAA/B;AAIA,QAAMC,WAAW,GAAGH,gBAAgB,CAACI,QAAjB,EAApB;AACA;AACID,IAAAA;AADJ,KAEOJ,YAAY,CAACM,IAFpB;AAIH","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\nimport remark from 'remark'\nimport html from 'remark-html'\n\nconst infoDirectory = path.join(process.cwd(), 'info')\n\nexport async function getPrivacy() {\n    const fullPath = path.join(infoDirectory, 'privacy.md')\n    const fileContents = fs.readFileSync(fullPath, 'utf8')\n    const matterResult = matter(fileContents)\n\n    const processedContent = await remark()\n        .use(html)\n        .process(matterResult.content)\n\n    const contentHtml = processedContent.toString()\n    return {\n        contentHtml,\n        ...matterResult.data\n    }\n}\n\nexport async function getTos() {\n    const fullPath = path.join(infoDirectory, 'tos.md')\n    const fileContents = fs.readFileSync(fullPath, 'utf8')\n    const matterResult = matter(fileContents)\n\n    const processedContent = await remark()\n        .use(html)\n        .process(matterResult.content)\n\n    const contentHtml = processedContent.toString()\n    return {\n        contentHtml,\n        ...matterResult.data\n    }\n}\n\nexport async function getTransaction() {\n    const fullPath = path.join(infoDirectory, 'transaction.md')\n    const fileContents = fs.readFileSync(fullPath, 'utf8')\n    const matterResult = matter(fileContents)\n\n    const processedContent = await remark()\n        .use(html)\n        .process(matterResult.content)\n\n    const contentHtml = processedContent.toString()\n    return {\n        contentHtml,\n        ...matterResult.data\n    }\n}"]},"metadata":{},"sourceType":"module"}